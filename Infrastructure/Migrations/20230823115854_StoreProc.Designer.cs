// <auto-generated />
using System;
using Infrastructure.Data;
using System.Data.Entity;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Infrastructure.Migrations
{
	[DbContext(typeof(ApplicationDbContext))]
	[Migration("20230816091929_StoreProc")]
	partial class StoreProc
	{
		protected override void BuildTargetModel(ModelBuilder modelBuilder)
		{
#pragma warning disable 612, 618
			modelBuilder
				.HasAnnotation("ProductVersion", "6.0.13")
				.HasAnnotation("Relational:MaxIdentifierLength", 128);

			SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

			modelBuilder.Entity("Core.Entity.ApplicationUser", b =>
			{
				b.Property<string>("Id")
					.HasColumnType("nvarchar(450)");

				b.Property<int>("AccessFailedCount")
					.HasColumnType("int");

				b.Property<string>("ConcurrencyStamp")
					.IsConcurrencyToken()
					.HasColumnType("nvarchar(max)");

				b.Property<string>("CreatedById")
					.HasColumnType("nvarchar(max)");

				b.Property<DateTime>("CreatedOn")
					.ValueGeneratedOnAdd()
					.HasColumnType("datetime2")
					.HasDefaultValueSql("GETDATE()");

				b.Property<string>("Email")
					.HasMaxLength(256)
					.HasColumnType("nvarchar(256)");

				b.Property<bool>("EmailConfirmed")
					.HasColumnType("bit");

				b.Property<string>("FullName")
					.IsRequired()
					.HasMaxLength(200)
					.HasColumnType("nvarchar(200)");

				b.Property<bool>("IsDeleted")
					.ValueGeneratedOnAdd()
					.HasColumnType("bit")
					.HasDefaultValue(false);

				b.Property<string>("LastUpdatedById")
					.HasColumnType("nvarchar(max)");

				b.Property<DateTime?>("LastUpdatedOn")
					.HasColumnType("datetime2");

				b.Property<bool>("LockoutEnabled")
					.HasColumnType("bit");

				b.Property<DateTimeOffset?>("LockoutEnd")
					.HasColumnType("datetimeoffset");

				b.Property<string>("NormalizedEmail")
					.HasMaxLength(256)
					.HasColumnType("nvarchar(256)");

				b.Property<string>("NormalizedUserName")
					.HasMaxLength(256)
					.HasColumnType("nvarchar(256)");

				b.Property<string>("PasswordHash")
					.HasColumnType("nvarchar(max)");

				b.Property<string>("PhoneNumber")
					.HasColumnType("nvarchar(max)");

				b.Property<bool>("PhoneNumberConfirmed")
					.HasColumnType("bit");

				b.Property<string>("SecurityStamp")
					.HasColumnType("nvarchar(max)");

				b.Property<bool>("TwoFactorEnabled")
					.HasColumnType("bit");

				b.Property<int>("UniqueId")
					.HasColumnType("int");

				b.Property<string>("UserName")
					.HasMaxLength(256)
					.HasColumnType("nvarchar(256)");

				b.HasKey("Id");

				b.HasIndex("NormalizedEmail")
					.HasDatabaseName("EmailIndex");

				b.HasIndex("NormalizedUserName")
					.IsUnique()
					.HasDatabaseName("UserNameIndex")
					.HasFilter("[NormalizedUserName] IS NOT NULL");

				b.ToTable("AspNetUsers", (string)null);
			});

			modelBuilder.Entity("Core.Entity.Attendance", b =>
			{
				b.Property<int>("Id")
					.ValueGeneratedOnAdd()
					.HasColumnType("int");

				SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

				b.Property<bool>("ApproveState")
					.HasColumnType("bit");

				b.Property<string>("AttachmentFile")
					.IsRequired()
					.HasMaxLength(500)
					.HasColumnType("nvarchar(500)");

				b.Property<DateTime>("AttendDate")
					.HasColumnType("datetime2");

				b.Property<int>("AttendanceTypeId")
					.HasColumnType("int");

				b.Property<string>("CreatedById")
					.HasColumnType("nvarchar(450)");

				b.Property<DateTime>("CreatedOn")
					.ValueGeneratedOnAdd()
					.HasColumnType("datetime2")
					.HasDefaultValueSql("GETDATE()");

				b.Property<bool>("IsDeleted")
					.ValueGeneratedOnAdd()
					.HasColumnType("bit")
					.HasDefaultValue(false);

				b.Property<string>("LastUpdatedById")
					.HasColumnType("nvarchar(450)");

				b.Property<DateTime?>("LastUpdatedOn")
					.HasColumnType("datetime2");

				b.Property<int>("ManagerId")
					.HasColumnType("int");

				b.Property<int>("TraineeId")
					.HasColumnType("int");

				b.Property<int>("UserType")
					.HasColumnType("int");

				b.HasKey("Id");

				b.HasIndex("AttendanceTypeId");

				b.HasIndex("CreatedById");

				b.HasIndex("LastUpdatedById");

				b.ToTable("Attendances");
			});

			modelBuilder.Entity("Core.Entity.AttendanceType", b =>
			{
				b.Property<int>("Id")
					.ValueGeneratedOnAdd()
					.HasColumnType("int");

				SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

				b.Property<string>("AttendTypeName")
					.IsRequired()
					.HasMaxLength(100)
					.HasColumnType("nvarchar(100)");

				b.Property<string>("CreatedById")
					.HasColumnType("nvarchar(450)");

				b.Property<DateTime>("CreatedOn")
					.ValueGeneratedOnAdd()
					.HasColumnType("datetime2")
					.HasDefaultValueSql("GETDATE()");

				b.Property<bool>("IsDeleted")
					.ValueGeneratedOnAdd()
					.HasColumnType("bit")
					.HasDefaultValue(false);

				b.Property<string>("LastUpdatedById")
					.HasColumnType("nvarchar(450)");

				b.Property<DateTime?>("LastUpdatedOn")
					.HasColumnType("datetime2");

				b.HasKey("Id");

				b.HasIndex("CreatedById");

				b.HasIndex("LastUpdatedById");

				b.ToTable("AttendanceTypes");
			});

			modelBuilder.Entity("Core.Entity.City", b =>
			{
				b.Property<int>("Id")
					.ValueGeneratedOnAdd()
					.HasColumnType("int");

				SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

				b.Property<string>("CreatedById")
					.HasColumnType("nvarchar(450)");

				b.Property<DateTime>("CreatedOn")
					.ValueGeneratedOnAdd()
					.HasColumnType("datetime2")
					.HasDefaultValueSql("GETDATE()");

				b.Property<bool>("IsDeleted")
					.ValueGeneratedOnAdd()
					.HasColumnType("bit")
					.HasDefaultValue(false);

				b.Property<string>("LastUpdatedById")
					.HasColumnType("nvarchar(450)");

				b.Property<DateTime?>("LastUpdatedOn")
					.HasColumnType("datetime2");

				b.Property<string>("Name")
					.IsRequired()
					.HasMaxLength(100)
					.HasColumnType("nvarchar(100)");

				b.Property<string>("Notes")
					.HasMaxLength(200)
					.HasColumnType("nvarchar(200)");

				b.HasKey("Id");

				b.HasIndex("CreatedById");

				b.HasIndex("LastUpdatedById");

				b.ToTable("Cities");
			});

			modelBuilder.Entity("Core.Entity.CoordinatorDetails", b =>
			{
				b.Property<string>("CoordinatorId")
					.IsRequired()
					.HasColumnType("nvarchar(max)");

				b.Property<DateTime?>("CreatedOn")
					.HasColumnType("datetime2");

				b.Property<string>("FullName")
					.IsRequired()
					.HasColumnType("nvarchar(max)");

				b.Property<int>("JobId")
					.HasColumnType("int");

				b.Property<string>("JobName")
					.IsRequired()
					.HasColumnType("nvarchar(max)");

				b.Property<string>("TraineeIds")
					.IsRequired()
					.HasColumnType("nvarchar(max)");

				b.Property<string>("TraineeNames")
					.IsRequired()
					.HasColumnType("nvarchar(max)");

				b.Property<int>("id")
					.HasColumnType("int");

				b.ToView(null);
			});

			modelBuilder.Entity("Core.Entity.CoordinatorRows", b =>
			{
				b.Property<string>("CoordinatorId")
					.IsRequired()
					.HasColumnType("nvarchar(max)");

				b.Property<DateTime?>("CreatedOn")
					.HasColumnType("datetime2");

				b.Property<string>("FullName")
					.IsRequired()
					.HasColumnType("nvarchar(max)");

				b.Property<int>("JobId")
					.HasColumnType("int");

				b.Property<string>("JobName")
					.IsRequired()
					.HasColumnType("nvarchar(max)");

				b.Property<string>("TraineeIds")
					.IsRequired()
					.HasColumnType("nvarchar(max)");

				b.Property<string>("TraineeNames")
					.IsRequired()
					.HasColumnType("nvarchar(max)");

				b.Property<int>("id")
					.HasColumnType("int");

				b.ToView(null);
			});

			modelBuilder.Entity("Core.Entity.Coordinators", b =>
			{
				b.Property<int>("Id")
					.ValueGeneratedOnAdd()
					.HasColumnType("int");

				SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

				b.Property<string>("CreatedById")
					.HasColumnType("nvarchar(450)");

				b.Property<DateTime>("CreatedOn")
					.HasColumnType("datetime2");

				b.Property<int>("DepartmentId")
					.HasColumnType("int");

				b.Property<bool>("IsDeleted")
					.HasColumnType("bit");

				b.Property<string>("LastUpdatedById")
					.HasColumnType("nvarchar(450)");

				b.Property<DateTime?>("LastUpdatedOn")
					.HasColumnType("datetime2");

				b.Property<string>("UserId")
					.IsRequired()
					.HasColumnType("nvarchar(450)");

				b.Property<string>("name")
					.HasColumnType("nvarchar(max)");

				b.HasKey("Id");

				b.HasIndex("CreatedById");

				b.HasIndex("DepartmentId");

				b.HasIndex("LastUpdatedById");

				b.HasIndex("UserId");

				b.ToTable("Coordinators");
			});

			modelBuilder.Entity("Core.Entity.Department", b =>
			{
				b.Property<int>("Id")
					.ValueGeneratedOnAdd()
					.HasColumnType("int");

				SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

				b.Property<string>("CoordinatorId")
					.IsRequired()
					.HasMaxLength(450)
					.HasColumnType("nvarchar(450)");

				b.Property<string>("CreatedById")
					.HasColumnType("nvarchar(450)");

				b.Property<DateTime>("CreatedOn")
					.ValueGeneratedOnAdd()
					.HasColumnType("datetime2")
					.HasDefaultValueSql("GETDATE()");

				b.Property<bool>("IsDeleted")
					.ValueGeneratedOnAdd()
					.HasColumnType("bit")
					.HasDefaultValue(false);

				b.Property<string>("LastUpdatedById")
					.HasColumnType("nvarchar(450)");

				b.Property<DateTime?>("LastUpdatedOn")
					.HasColumnType("datetime2");

				b.Property<string>("Name")
					.IsRequired()
					.HasMaxLength(100)
					.HasColumnType("nvarchar(100)");

				b.Property<string>("Notes")
					.IsRequired()
					.HasMaxLength(200)
					.HasColumnType("nvarchar(200)");

				b.HasKey("Id");

				b.HasIndex("CoordinatorId");

				b.HasIndex("CreatedById");

				b.HasIndex("LastUpdatedById");

				b.ToTable("Departments");
			});

			modelBuilder.Entity("Core.Entity.DepartmentDetails", b =>
			{
				b.Property<string>("CoordinatorName")
					.IsRequired()
					.HasColumnType("nvarchar(max)");

				b.Property<string>("CreatedById")
					.HasColumnType("nvarchar(450)");

				b.Property<DateTime>("CreatedOn")
					.HasColumnType("datetime2");

				b.Property<int>("Id")
					.HasColumnType("int");

				b.Property<bool>("IsDeleted")
					.HasColumnType("bit");

				b.Property<string>("LastUpdatedById")
					.HasColumnType("nvarchar(450)");

				b.Property<DateTime?>("LastUpdatedOn")
					.HasColumnType("datetime2");

				b.Property<string>("Name")
					.IsRequired()
					.HasColumnType("nvarchar(max)");

				b.Property<string>("SupervisorName")
					.IsRequired()
					.HasColumnType("nvarchar(max)");

				b.HasIndex("CreatedById");

				b.HasIndex("LastUpdatedById");

				b.ToView(null);
			});

			modelBuilder.Entity("Core.Entity.DepartmentRows", b =>
			{
				b.Property<string>("Coordinator")
					.HasColumnType("nvarchar(max)");

				b.Property<string>("CreatedById")
					.HasColumnType("nvarchar(450)");

				b.Property<DateTime>("CreatedOn")
					.HasColumnType("datetime2");

				b.Property<int>("Id")
					.HasColumnType("int");

				b.Property<bool>("IsDeleted")
					.HasColumnType("bit");

				b.Property<int?>("JobCount")
					.HasColumnType("int");

				b.Property<string>("LastUpdatedById")
					.HasColumnType("nvarchar(450)");

				b.Property<DateTime?>("LastUpdatedOn")
					.HasColumnType("datetime2");

				b.Property<string>("Name")
					.IsRequired()
					.HasColumnType("nvarchar(max)");

				b.Property<string>("Supervisor")
					.HasColumnType("nvarchar(max)");

				b.Property<int?>("TraineeCount")
					.HasColumnType("int");

				b.HasIndex("CreatedById");

				b.HasIndex("LastUpdatedById");

				b.ToView(null);
			});

			modelBuilder.Entity("Core.Entity.Education", b =>
			{
				b.Property<int>("Id")
					.ValueGeneratedOnAdd()
					.HasColumnType("int");

				SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

				b.Property<string>("CreatedById")
					.HasColumnType("nvarchar(450)");

				b.Property<DateTime>("CreatedOn")
					.ValueGeneratedOnAdd()
					.HasColumnType("datetime2")
					.HasDefaultValueSql("GETDATE()");

				b.Property<bool>("IsDeleted")
					.ValueGeneratedOnAdd()
					.HasColumnType("bit")
					.HasDefaultValue(false);

				b.Property<string>("LastUpdatedById")
					.HasColumnType("nvarchar(450)");

				b.Property<DateTime?>("LastUpdatedOn")
					.HasColumnType("datetime2");

				b.Property<string>("Majority")
					.IsRequired()
					.HasMaxLength(100)
					.HasColumnType("nvarchar(100)");

				b.HasKey("Id");

				b.HasIndex("CreatedById");

				b.HasIndex("LastUpdatedById");

				b.ToTable("Education");
			});

			modelBuilder.Entity("Core.Entity.Experience", b =>
			{
				b.Property<int>("Id")
					.ValueGeneratedOnAdd()
					.HasColumnType("int");

				SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

				b.Property<string>("CreatedById")
					.HasColumnType("nvarchar(450)");

				b.Property<DateTime>("CreatedOn")
					.ValueGeneratedOnAdd()
					.HasColumnType("datetime2")
					.HasDefaultValueSql("GETDATE()");

				b.Property<string>("ExperiencesName")
					.IsRequired()
					.HasMaxLength(100)
					.HasColumnType("nvarchar(100)");

				b.Property<bool>("IsDeleted")
					.ValueGeneratedOnAdd()
					.HasColumnType("bit")
					.HasDefaultValue(false);

				b.Property<string>("LastUpdatedById")
					.HasColumnType("nvarchar(450)");

				b.Property<DateTime?>("LastUpdatedOn")
					.HasColumnType("datetime2");

				b.HasKey("Id");

				b.HasIndex("CreatedById");

				b.HasIndex("LastUpdatedById");

				b.ToTable("Experiences");
			});

			modelBuilder.Entity("Core.Entity.Interview", b =>
			{
				b.Property<int>("Id")
					.ValueGeneratedOnAdd()
					.HasColumnType("int");

				SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

				b.Property<string>("CreatedById")
					.HasColumnType("nvarchar(450)");

				b.Property<DateTime>("CreatedOn")
					.HasColumnType("datetime2");

				b.Property<int?>("InterviewStatusId")
					.HasColumnType("int");

				b.Property<string>("InterviewerId")
					.HasColumnType("nvarchar(450)");

				b.Property<bool>("IsDeleted")
					.HasColumnType("bit");

				b.Property<int>("JobId")
					.HasColumnType("int");

				b.Property<string>("LastUpdatedById")
					.HasColumnType("nvarchar(450)");

				b.Property<DateTime?>("LastUpdatedOn")
					.HasColumnType("datetime2");

				b.Property<int>("TraineeProfileId")
					.HasColumnType("int");

				b.Property<DateTime>("interviewDate")
					.HasColumnType("datetime2");

				b.Property<string>("locationUrl")
					.HasColumnType("nvarchar(max)");

				b.Property<string>("notes")
					.HasColumnType("nvarchar(max)");

				b.HasKey("Id");

				b.HasIndex("CreatedById");

				b.HasIndex("InterviewStatusId");

				b.HasIndex("InterviewerId");

				b.HasIndex("JobId");

				b.HasIndex("LastUpdatedById");

				b.HasIndex("TraineeProfileId");

				b.ToTable("Interviews");
			});

			modelBuilder.Entity("Core.Entity.InterviewDetails", b =>
			{
				b.Property<string>("CreatedById")
					.HasColumnType("nvarchar(450)");

				b.Property<DateTime>("CreatedOn")
					.HasColumnType("datetime2");

				b.Property<int>("Id")
					.HasColumnType("int");

				b.Property<string>("InterviewBy")
					.HasColumnType("nvarchar(max)");

				b.Property<bool>("IsDeleted")
					.HasColumnType("bit");

				b.Property<string>("JobName")
					.HasColumnType("nvarchar(max)");

				b.Property<string>("LastUpdatedById")
					.HasColumnType("nvarchar(450)");

				b.Property<DateTime?>("LastUpdatedOn")
					.HasColumnType("datetime2");

				b.Property<string>("TraineeName")
					.HasColumnType("nvarchar(max)");

				b.Property<DateTime>("interviewDate")
					.HasColumnType("datetime2");

				b.Property<string>("interviewState")
					.HasColumnType("nvarchar(max)");

				b.Property<string>("locationUrl")
					.HasColumnType("nvarchar(max)");

				b.Property<string>("notes")
					.HasColumnType("nvarchar(max)");

				b.HasIndex("CreatedById");

				b.HasIndex("LastUpdatedById");

				b.ToView(null);
			});

			modelBuilder.Entity("Core.Entity.InterviewRows", b =>
			{
				b.Property<string>("CV_filePath")
					.HasColumnType("nvarchar(max)");

				b.Property<string>("CreatedById")
					.HasColumnType("nvarchar(450)");

				b.Property<DateTime>("CreatedOn")
					.HasColumnType("datetime2");

				b.Property<string>("Email")
					.HasColumnType("nvarchar(max)");

				b.Property<int>("Id")
					.HasColumnType("int");

				b.Property<string>("IqamaNumber")
					.HasColumnType("nvarchar(max)");

				b.Property<bool>("IsDeleted")
					.HasColumnType("bit");

				b.Property<string>("JobStatus")
					.HasColumnType("nvarchar(max)");

				b.Property<int>("JobStatusId")
					.HasColumnType("int");

				b.Property<string>("LastUpdatedById")
					.HasColumnType("nvarchar(450)");

				b.Property<DateTime?>("LastUpdatedOn")
					.HasColumnType("datetime2");

				b.Property<string>("PhoneNo")
					.HasColumnType("nvarchar(max)");

				b.Property<string>("ProfilePic")
					.HasColumnType("nvarchar(max)");

				b.Property<string>("UserName")
					.HasColumnType("nvarchar(max)");

				b.Property<string>("fullName")
					.HasColumnType("nvarchar(max)");

				b.Property<int>("jobId")
					.HasColumnType("int");

				b.Property<string>("locationUrl")
					.HasColumnType("nvarchar(max)");

				b.Property<string>("userID")
					.HasColumnType("nvarchar(max)");

				b.HasIndex("CreatedById");

				b.HasIndex("LastUpdatedById");

				b.ToView(null);
			});

			modelBuilder.Entity("Core.Entity.InterviewStatus", b =>
			{
				b.Property<int>("Id")
					.ValueGeneratedOnAdd()
					.HasColumnType("int");

				SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

				b.Property<string>("CreatedById")
					.HasColumnType("nvarchar(450)");

				b.Property<DateTime>("CreatedOn")
					.HasColumnType("datetime2");

				b.Property<bool>("IsDeleted")
					.HasColumnType("bit");

				b.Property<string>("LastUpdatedById")
					.HasColumnType("nvarchar(450)");

				b.Property<DateTime?>("LastUpdatedOn")
					.HasColumnType("datetime2");

				b.Property<string>("StatusName")
					.IsRequired()
					.HasColumnType("nvarchar(max)");

				b.HasKey("Id");

				b.HasIndex("CreatedById");

				b.HasIndex("LastUpdatedById");

				b.ToTable("InterviewStatus");
			});

			modelBuilder.Entity("Core.Entity.Job", b =>
			{
				b.Property<int>("Id")
					.ValueGeneratedOnAdd()
					.HasColumnType("int");

				SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

				b.Property<int>("CountRequiredToJobs")
					.HasColumnType("int");

				b.Property<string>("CreatedById")
					.HasColumnType("nvarchar(450)");

				b.Property<DateTime>("CreatedOn")
					.ValueGeneratedOnAdd()
					.HasColumnType("datetime2")
					.HasDefaultValueSql("GETDATE()");

				b.Property<int?>("DepId")
					.HasColumnType("int");

				b.Property<int?>("EducId")
					.HasColumnType("int");

				b.Property<DateTime>("EndDate")
					.HasColumnType("datetime2");

				b.Property<int?>("ExpId")
					.HasColumnType("int");

				b.Property<string>("ExplaningOfTranningTask")
					.IsRequired()
					.HasMaxLength(500)
					.HasColumnType("nvarchar(500)");

				b.Property<string>("GoogleMapLink")
					.IsRequired()
					.HasMaxLength(200)
					.HasColumnType("nvarchar(200)");

				b.Property<DateTime>("InterViewDate")
					.HasColumnType("datetime2");

				b.Property<bool>("IsDeleted")
					.ValueGeneratedOnAdd()
					.HasColumnType("bit")
					.HasDefaultValue(false);

				b.Property<int?>("JobStatusId")
					.HasColumnType("int");

				b.Property<string>("LastUpdatedById")
					.HasColumnType("nvarchar(450)");

				b.Property<DateTime?>("LastUpdatedOn")
					.HasColumnType("datetime2");

				b.Property<string>("Name")
					.IsRequired()
					.HasMaxLength(100)
					.HasColumnType("nvarchar(100)");

				b.Property<string>("Notes")
					.HasMaxLength(200)
					.HasColumnType("nvarchar(200)");

				b.Property<DateTime>("StartDate")
					.HasColumnType("datetime2");

				b.HasKey("Id");

				b.HasIndex("CreatedById");

				b.HasIndex("DepId");

				b.HasIndex("EducId");

				b.HasIndex("ExpId");

				b.HasIndex("JobStatusId");

				b.HasIndex("LastUpdatedById");

				b.ToTable("Jobs");
			});

			modelBuilder.Entity("Core.Entity.JobDetails", b =>
			{
				b.Property<string>("Coordinator")
					.HasColumnType("nvarchar(max)");

				b.Property<int?>("CountRequiredToJobs")
					.HasColumnType("int");

				b.Property<string>("CreatedById")
					.HasColumnType("nvarchar(450)");

				b.Property<DateTime>("CreatedOn")
					.HasColumnType("datetime2");

				b.Property<string>("Department")
					.HasColumnType("nvarchar(max)");

				b.Property<string>("Education")
					.HasColumnType("nvarchar(max)");

				b.Property<DateTime?>("EndDate")
					.HasColumnType("datetime2");

				b.Property<string>("Experience")
					.HasColumnType("nvarchar(max)");

				b.Property<string>("ExplaningOfTranningTask")
					.HasColumnType("nvarchar(max)");

				b.Property<int>("Id")
					.HasColumnType("int");

				b.Property<bool>("IsDeleted")
					.HasColumnType("bit");

				b.Property<string>("LastUpdatedById")
					.HasColumnType("nvarchar(450)");

				b.Property<DateTime?>("LastUpdatedOn")
					.HasColumnType("datetime2");

				b.Property<string>("Name")
					.HasColumnType("nvarchar(max)");

				b.Property<string>("Notes")
					.HasColumnType("nvarchar(max)");

				b.Property<DateTime?>("StartDate")
					.HasColumnType("datetime2");

				b.Property<string>("Supervisor")
					.HasColumnType("nvarchar(max)");

				b.Property<int?>("TraineeCount")
					.HasColumnType("int");

				b.Property<DateTime?>("interviewDate")
					.HasColumnType("datetime2");

				b.Property<string>("traineeStatus")
					.HasColumnType("nvarchar(max)");

				b.HasIndex("CreatedById");

				b.HasIndex("LastUpdatedById");

				b.ToView(null);
			});

			modelBuilder.Entity("Core.Entity.JobDTO", b =>
			{
				b.Property<int>("CountRequiredToJobs")
					.HasColumnType("int");

				b.Property<string>("CreatedById")
					.HasColumnType("nvarchar(450)");

				b.Property<DateTime>("CreatedOn")
					.HasColumnType("datetime2");

				b.Property<int?>("DepId")
					.HasColumnType("int");

				b.Property<DateTime>("EndDate")
					.HasColumnType("datetime2");

				b.Property<string>("ExplaningOfTranningTask")
					.IsRequired()
					.HasColumnType("nvarchar(max)");

				b.Property<string>("GoogleMapLink")
					.IsRequired()
					.HasColumnType("nvarchar(max)");

				b.Property<int>("Id")
					.HasColumnType("int");

				b.Property<DateTime>("InterViewDate")
					.HasColumnType("datetime2");

				b.Property<bool>("IsDeleted")
					.HasColumnType("bit");

				b.Property<int?>("JobStatusId")
					.HasColumnType("int");

				b.Property<string>("LastUpdatedById")
					.HasColumnType("nvarchar(450)");

				b.Property<DateTime?>("LastUpdatedOn")
					.HasColumnType("datetime2");

				b.Property<string>("Name")
					.IsRequired()
					.HasColumnType("nvarchar(max)");

				b.Property<string>("Notes")
					.HasColumnType("nvarchar(max)");

				b.Property<DateTime>("StartDate")
					.HasColumnType("datetime2");

				b.Property<string>("Status")
					.HasColumnType("nvarchar(max)");

				b.HasIndex("CreatedById");

				b.HasIndex("DepId");

				b.HasIndex("LastUpdatedById");

				b.ToView(null);
			});

			modelBuilder.Entity("Core.Entity.JobInfoDTO", b =>
			{
				b.Property<int>("Applied")
					.HasColumnType("int");

				b.Property<int>("CountRequiredToJobs")
					.HasColumnType("int");

				b.Property<DateTime>("EndDate")
					.HasColumnType("datetime2");

				b.Property<string>("ExplaningOfTranningTask")
					.IsRequired()
					.HasColumnType("nvarchar(max)");

				b.Property<string>("GoogleMapLink")
					.IsRequired()
					.HasColumnType("nvarchar(max)");

				b.Property<int>("Granted")
					.HasColumnType("int");

				b.Property<int>("Id")
					.HasColumnType("int");

				b.Property<DateTime>("InterViewDate")
					.HasColumnType("datetime2");

				b.Property<int>("Interview")
					.HasColumnType("int");

				b.Property<bool>("IsDeleted")
					.HasColumnType("bit");

				b.Property<int?>("JobStatusId")
					.HasColumnType("int");

				b.Property<string>("Name")
					.IsRequired()
					.HasColumnType("nvarchar(max)");

				b.Property<string>("Notes")
					.HasColumnType("nvarchar(max)");

				b.Property<int>("RefusedCount")
					.HasColumnType("int");

				b.Property<int>("Rejected")
					.HasColumnType("int");

				b.Property<DateTime>("StartDate")
					.HasColumnType("datetime2");

				b.Property<int>("TraineeCount")
					.HasColumnType("int");

				b.ToView(null);
			});

			modelBuilder.Entity("Core.Entity.JobRows", b =>
			{
				b.Property<int?>("Applied")
					.HasColumnType("int");

				b.Property<string>("Coordinator")
					.HasColumnType("nvarchar(max)");

				b.Property<int?>("CountRequiredToJobs")
					.HasColumnType("int");

				b.Property<string>("CreatedById")
					.HasColumnType("nvarchar(450)");

				b.Property<DateTime>("CreatedOn")
					.HasColumnType("datetime2");

				b.Property<string>("Department")
					.HasColumnType("nvarchar(max)");

				b.Property<DateTime?>("EndDate")
					.HasColumnType("datetime2");

				b.Property<int?>("Granted")
					.HasColumnType("int");

				b.Property<int>("Id")
					.HasColumnType("int");

				b.Property<int?>("Interview")
					.HasColumnType("int");

				b.Property<bool>("IsDeleted")
					.HasColumnType("bit");

				b.Property<string>("LastUpdatedById")
					.HasColumnType("nvarchar(450)");

				b.Property<DateTime?>("LastUpdatedOn")
					.HasColumnType("datetime2");

				b.Property<string>("Name")
					.HasColumnType("nvarchar(max)");

				b.Property<int?>("RefusedCount")
					.HasColumnType("int");

				b.Property<int?>("Rejected")
					.HasColumnType("int");

				b.Property<DateTime?>("StartDate")
					.HasColumnType("datetime2");

				b.Property<string>("Supervisor")
					.HasColumnType("nvarchar(max)");

				b.Property<int?>("TraineeCount")
					.HasColumnType("int");

				b.Property<DateTime?>("interviewDate")
					.HasColumnType("datetime2");

				b.Property<string>("traineeStatus")
					.HasColumnType("nvarchar(max)");

				b.Property<int?>("traineeStatusId")
					.HasColumnType("int");

				b.Property<string>("userId")
					.HasColumnType("nvarchar(max)");

				b.HasIndex("CreatedById");

				b.HasIndex("LastUpdatedById");

				b.ToView(null);
			});

			modelBuilder.Entity("Core.Entity.JobsStatus", b =>
			{
				b.Property<int>("Id")
					.ValueGeneratedOnAdd()
					.HasColumnType("int");

				SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

				b.Property<string>("CreatedById")
					.HasColumnType("nvarchar(450)");

				b.Property<DateTime>("CreatedOn")
					.ValueGeneratedOnAdd()
					.HasColumnType("datetime2")
					.HasDefaultValueSql("GETDATE()");

				b.Property<bool>("IsDeleted")
					.ValueGeneratedOnAdd()
					.HasColumnType("bit")
					.HasDefaultValue(false);

				b.Property<string>("LastUpdatedById")
					.HasColumnType("nvarchar(450)");

				b.Property<DateTime?>("LastUpdatedOn")
					.HasColumnType("datetime2");

				b.Property<string>("StatusName")
					.IsRequired()
					.HasMaxLength(100)
					.HasColumnType("nvarchar(100)");

				b.HasKey("Id");

				b.HasIndex("CreatedById");

				b.HasIndex("LastUpdatedById");

				b.ToTable("JobsStatus");
			});

			modelBuilder.Entity("Core.Entity.MaritalState", b =>
			{
				b.Property<int>("Id")
					.ValueGeneratedOnAdd()
					.HasColumnType("int");

				SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

				b.Property<string>("CreatedById")
					.HasColumnType("nvarchar(450)");

				b.Property<DateTime>("CreatedOn")
					.ValueGeneratedOnAdd()
					.HasColumnType("datetime2")
					.HasDefaultValueSql("GETDATE()");

				b.Property<bool>("IsDeleted")
					.ValueGeneratedOnAdd()
					.HasColumnType("bit")
					.HasDefaultValue(false);

				b.Property<string>("LastUpdatedById")
					.HasColumnType("nvarchar(450)");

				b.Property<DateTime?>("LastUpdatedOn")
					.HasColumnType("datetime2");

				b.Property<string>("Name")
					.IsRequired()
					.HasMaxLength(100)
					.HasColumnType("nvarchar(100)");

				b.HasKey("Id");

				b.HasIndex("CreatedById");

				b.HasIndex("LastUpdatedById");

				b.ToTable("MaritalStates");
			});

			modelBuilder.Entity("Core.Entity.Nationality", b =>
			{
				b.Property<int>("Id")
					.ValueGeneratedOnAdd()
					.HasColumnType("int");

				SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

				b.Property<string>("ArNationalityName")
					.IsRequired()
					.HasMaxLength(100)
					.HasColumnType("nvarchar(100)");

				b.Property<string>("CreatedById")
					.HasColumnType("nvarchar(450)");

				b.Property<DateTime>("CreatedOn")
					.ValueGeneratedOnAdd()
					.HasColumnType("datetime2")
					.HasDefaultValueSql("GETDATE()");

				b.Property<string>("EnNationalityName")
					.IsRequired()
					.HasMaxLength(100)
					.HasColumnType("nvarchar(100)");

				b.Property<bool>("IsDeleted")
					.ValueGeneratedOnAdd()
					.HasColumnType("bit")
					.HasDefaultValue(false);

				b.Property<string>("LastUpdatedById")
					.HasColumnType("nvarchar(450)");

				b.Property<DateTime?>("LastUpdatedOn")
					.HasColumnType("datetime2");

				b.HasKey("Id");

				b.HasIndex("CreatedById");

				b.HasIndex("LastUpdatedById");

				b.ToTable("Nationalities");
			});

			modelBuilder.Entity("Core.Entity.SocialStatus", b =>
			{
				b.Property<int>("Id")
					.ValueGeneratedOnAdd()
					.HasColumnType("int");

				SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

				b.Property<string>("CreatedById")
					.HasColumnType("nvarchar(450)");

				b.Property<DateTime>("CreatedOn")
					.ValueGeneratedOnAdd()
					.HasColumnType("datetime2")
					.HasDefaultValueSql("GETDATE()");

				b.Property<bool>("IsDeleted")
					.ValueGeneratedOnAdd()
					.HasColumnType("bit")
					.HasDefaultValue(false);

				b.Property<string>("LastUpdatedById")
					.HasColumnType("nvarchar(450)");

				b.Property<DateTime?>("LastUpdatedOn")
					.HasColumnType("datetime2");

				b.Property<string>("Name")
					.IsRequired()
					.HasMaxLength(100)
					.HasColumnType("nvarchar(100)");

				b.HasKey("Id");

				b.HasIndex("CreatedById");

				b.HasIndex("LastUpdatedById");

				b.ToTable("SocialStatus");
			});

			modelBuilder.Entity("Core.Entity.Supervisor", b =>
			{
				b.Property<int>("Id")
					.ValueGeneratedOnAdd()
					.HasColumnType("int");

				SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

				b.Property<string>("CreatedById")
					.HasColumnType("nvarchar(450)");

				b.Property<DateTime>("CreatedOn")
					.HasColumnType("datetime2");

				b.Property<int>("DepartmentId")
					.HasColumnType("int");

				b.Property<bool>("IsDeleted")
					.HasColumnType("bit");

				b.Property<string>("LastUpdatedById")
					.HasColumnType("nvarchar(450)");

				b.Property<DateTime?>("LastUpdatedOn")
					.HasColumnType("datetime2");

				b.Property<string>("UserId")
					.IsRequired()
					.HasColumnType("nvarchar(450)");

				b.Property<string>("name")
					.HasColumnType("nvarchar(max)");

				b.HasKey("Id");

				b.HasIndex("CreatedById");

				b.HasIndex("DepartmentId");

				b.HasIndex("LastUpdatedById");

				b.HasIndex("UserId");

				b.ToTable("Supervisor");
			});

			modelBuilder.Entity("Core.Entity.SupervisorDetails", b =>
			{
				b.Property<int?>("DepartmentId")
					.HasColumnType("int");

				b.Property<string>("Email")
					.IsRequired()
					.HasColumnType("nvarchar(max)");

				b.Property<string>("FullName")
					.IsRequired()
					.HasColumnType("nvarchar(max)");

				b.Property<string>("Id")
					.HasColumnType("nvarchar(max)");

				b.Property<bool>("IsDeleted")
					.HasColumnType("bit");

				b.Property<string>("Username")
					.IsRequired()
					.HasColumnType("nvarchar(max)");

				b.HasIndex("DepartmentId");

				b.ToView(null);
			});

			modelBuilder.Entity("Core.Entity.SupervisorRows", b =>
			{
				b.Property<string>("Email")
					.IsRequired()
					.HasColumnType("nvarchar(max)");

				b.Property<string>("FullName")
					.IsRequired()
					.HasColumnType("nvarchar(max)");

				b.Property<string>("Id")
					.HasColumnType("nvarchar(max)");

				b.Property<bool>("IsDeleted")
					.HasColumnType("bit");

				b.Property<string>("Username")
					.IsRequired()
					.HasColumnType("nvarchar(max)");

				b.ToView(null);
			});

			modelBuilder.Entity("Core.Entity.TamheirStatus", b =>
			{
				b.Property<int>("Id")
					.ValueGeneratedOnAdd()
					.HasColumnType("int");

				SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

				b.Property<string>("CreatedById")
					.HasColumnType("nvarchar(450)");

				b.Property<DateTime>("CreatedOn")
					.ValueGeneratedOnAdd()
					.HasColumnType("datetime2")
					.HasDefaultValueSql("GETDATE()");

				b.Property<bool>("IsDeleted")
					.ValueGeneratedOnAdd()
					.HasColumnType("bit")
					.HasDefaultValue(false);

				b.Property<string>("LastUpdatedById")
					.HasColumnType("nvarchar(450)");

				b.Property<DateTime?>("LastUpdatedOn")
					.HasColumnType("datetime2");

				b.Property<string>("StatusName")
					.IsRequired()
					.HasMaxLength(100)
					.HasColumnType("nvarchar(100)");

				b.HasKey("Id");

				b.HasIndex("CreatedById");

				b.HasIndex("LastUpdatedById");

				b.ToTable("TamheirStatuses");
			});

			modelBuilder.Entity("Core.Entity.Ticket", b =>
			{
				b.Property<int>("Id")
					.ValueGeneratedOnAdd()
					.HasColumnType("int");

				SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

				b.Property<string>("CreatedById")
					.HasColumnType("nvarchar(450)");

				b.Property<string>("CreatedForId")
					.HasColumnType("nvarchar(450)");

				b.Property<DateTime>("CreatedOn")
					.ValueGeneratedOnAdd()
					.HasColumnType("datetime2")
					.HasDefaultValueSql("GETDATE()");

				b.Property<string>("Details")
					.IsRequired()
					.HasMaxLength(500)
					.HasColumnType("nvarchar(500)");

				b.Property<bool>("IsDeleted")
					.ValueGeneratedOnAdd()
					.HasColumnType("bit")
					.HasDefaultValue(false);

				b.Property<string>("LastUpdatedById")
					.HasColumnType("nvarchar(450)");

				b.Property<DateTime?>("LastUpdatedOn")
					.HasColumnType("datetime2");

				b.Property<string>("Notes")
					.HasMaxLength(500)
					.HasColumnType("nvarchar(500)");

				b.Property<int>("StatusId")
					.HasColumnType("int");

				b.Property<string>("Subject")
					.IsRequired()
					.HasMaxLength(100)
					.HasColumnType("nvarchar(100)");

				b.Property<int>("TicketCategoryId")
					.HasColumnType("int");

				b.HasKey("Id");

				b.HasIndex("CreatedById");

				b.HasIndex("CreatedForId");

				b.HasIndex("LastUpdatedById");

				b.HasIndex("StatusId");

				b.HasIndex("TicketCategoryId");

				b.ToTable("Ticket");
			});

			modelBuilder.Entity("Core.Entity.TicketAttachment", b =>
			{
				b.Property<int>("Id")
					.ValueGeneratedOnAdd()
					.HasColumnType("int");

				SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

				b.Property<string>("CreatedById")
					.HasColumnType("nvarchar(450)");

				b.Property<DateTime>("CreatedOn")
					.ValueGeneratedOnAdd()
					.HasColumnType("datetime2")
					.HasDefaultValueSql("GETDATE()");

				b.Property<string>("FileName")
					.IsRequired()
					.HasMaxLength(500)
					.HasColumnType("nvarchar(500)");

				b.Property<string>("FilePath")
					.HasColumnType("nvarchar(max)");

				b.Property<bool>("IsDeleted")
					.ValueGeneratedOnAdd()
					.HasColumnType("bit")
					.HasDefaultValue(false);

				b.Property<string>("LastUpdatedById")
					.HasColumnType("nvarchar(450)");

				b.Property<DateTime?>("LastUpdatedOn")
					.HasColumnType("datetime2");

				b.Property<int?>("TicketId")
					.HasColumnType("int");

				b.Property<int>("Ticket_Id")
					.HasColumnType("int");

				b.Property<int>("UserId")
					.HasColumnType("int");

				b.HasKey("Id");

				b.HasIndex("CreatedById");

				b.HasIndex("LastUpdatedById");

				b.HasIndex("TicketId");

				b.ToTable("TicketAttachment");
			});

			modelBuilder.Entity("Core.Entity.TicketCategory", b =>
			{
				b.Property<int>("Id")
					.ValueGeneratedOnAdd()
					.HasColumnType("int");

				SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

				b.Property<string>("CategoryName")
					.IsRequired()
					.HasMaxLength(100)
					.HasColumnType("nvarchar(100)");

				b.Property<string>("CreatedById")
					.HasColumnType("nvarchar(450)");

				b.Property<DateTime>("CreatedOn")
					.ValueGeneratedOnAdd()
					.HasColumnType("datetime2")
					.HasDefaultValueSql("GETDATE()");

				b.Property<bool>("IsDeleted")
					.ValueGeneratedOnAdd()
					.HasColumnType("bit")
					.HasDefaultValue(false);

				b.Property<string>("LastUpdatedById")
					.HasColumnType("nvarchar(450)");

				b.Property<DateTime?>("LastUpdatedOn")
					.HasColumnType("datetime2");

				b.HasKey("Id");

				b.HasIndex("CreatedById");

				b.HasIndex("LastUpdatedById");

				b.ToTable("TicketCategory");
			});

			modelBuilder.Entity("Core.Entity.TicketDetails", b =>
			{
				b.Property<string>("CategoryName")
					.HasColumnType("nvarchar(max)");

				b.Property<string>("CreatedById")
					.HasColumnType("nvarchar(450)");

				b.Property<DateTime>("CreatedOn")
					.HasColumnType("datetime2");

				b.Property<string>("Details")
					.HasColumnType("nvarchar(max)");

				b.Property<int>("Id")
					.HasColumnType("int");

				b.Property<bool>("IsDeleted")
					.HasColumnType("bit");

				b.Property<string>("LastUpdatedById")
					.HasColumnType("nvarchar(450)");

				b.Property<DateTime?>("LastUpdatedOn")
					.HasColumnType("datetime2");

				b.Property<string>("Notes")
					.HasColumnType("nvarchar(max)");

				b.Property<string>("Status")
					.HasColumnType("nvarchar(max)");

				b.Property<string>("Subject")
					.HasColumnType("nvarchar(max)");

				b.HasIndex("CreatedById");

				b.HasIndex("LastUpdatedById");

				b.ToView(null);
			});

			modelBuilder.Entity("Core.Entity.TicketResponse", b =>
			{
				b.Property<int>("Id")
					.ValueGeneratedOnAdd()
					.HasColumnType("int");

				SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

				b.Property<string>("CreatedById")
					.HasColumnType("nvarchar(450)");

				b.Property<DateTime>("CreatedOn")
					.ValueGeneratedOnAdd()
					.HasColumnType("datetime2")
					.HasDefaultValueSql("GETDATE()");

				b.Property<string>("FilePath")
					.HasMaxLength(500)
					.HasColumnType("nvarchar(500)");

				b.Property<bool>("IsDeleted")
					.ValueGeneratedOnAdd()
					.HasColumnType("bit")
					.HasDefaultValue(false);

				b.Property<string>("LastUpdatedById")
					.HasColumnType("nvarchar(450)");

				b.Property<DateTime?>("LastUpdatedOn")
					.HasColumnType("datetime2");

				b.Property<string>("Response")
					.IsRequired()
					.HasMaxLength(500)
					.HasColumnType("nvarchar(500)");

				b.Property<int>("TicketId")
					.HasColumnType("int");

				b.HasKey("Id");

				b.HasIndex("CreatedById");

				b.HasIndex("LastUpdatedById");

				b.HasIndex("TicketId");

				b.ToTable("TicketResponse");
			});

			modelBuilder.Entity("Core.Entity.TicketRows", b =>
			{
				b.Property<string>("CreatedById")
					.HasColumnType("nvarchar(450)");

				b.Property<DateTime>("CreatedOn")
					.HasColumnType("datetime2");

				b.Property<string>("Details")
					.IsRequired()
					.HasColumnType("nvarchar(max)");

				b.Property<int>("Id")
					.HasColumnType("int");

				b.Property<bool>("IsDeleted")
					.HasColumnType("bit");

				b.Property<string>("LastUpdatedById")
					.HasColumnType("nvarchar(450)");

				b.Property<DateTime?>("LastUpdatedOn")
					.HasColumnType("datetime2");

				b.Property<string>("Notes")
					.HasColumnType("nvarchar(max)");

				b.Property<string>("Subject")
					.IsRequired()
					.HasColumnType("nvarchar(max)");

				b.Property<string>("TicketByName")
					.HasColumnType("nvarchar(max)");

				b.Property<string>("TicketForName")
					.HasColumnType("nvarchar(max)");

				b.Property<string>("ticketCategory")
					.HasColumnType("nvarchar(max)");

				b.Property<string>("ticketStatus")
					.HasColumnType("nvarchar(max)");

				b.HasIndex("CreatedById");

				b.HasIndex("LastUpdatedById");

				b.ToView(null);
			});

			modelBuilder.Entity("Core.Entity.TicketStatus", b =>
			{
				b.Property<int>("Id")
					.ValueGeneratedOnAdd()
					.HasColumnType("int");

				SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

				b.Property<string>("Name")
					.IsRequired()
					.HasMaxLength(100)
					.HasColumnType("nvarchar(100)");

				b.HasKey("Id");

				b.ToTable("TicketStatus");
			});

			modelBuilder.Entity("Core.Entity.TraineeContract", b =>
			{
				b.Property<int>("Id")
					.ValueGeneratedOnAdd()
					.HasColumnType("int");

				SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

				b.Property<string>("ContractByIdId")
					.HasColumnType("nvarchar(450)");

				b.Property<string>("ContractFile")
					.HasColumnType("nvarchar(max)");

				b.Property<string>("CreatedById")
					.HasColumnType("nvarchar(450)");

				b.Property<DateTime>("CreatedOn")
					.HasColumnType("datetime2");

				b.Property<int>("DepartmentId")
					.HasColumnType("int");

				b.Property<string>("Details")
					.HasColumnType("nvarchar(max)");

				b.Property<DateTime?>("EndDate")
					.HasColumnType("datetime2");

				b.Property<bool>("IsDeleted")
					.HasColumnType("bit");

				b.Property<int>("JobId")
					.HasColumnType("int");

				b.Property<string>("LastUpdatedById")
					.HasColumnType("nvarchar(450)");

				b.Property<DateTime?>("LastUpdatedOn")
					.HasColumnType("datetime2");

				b.Property<string>("Name")
					.IsRequired()
					.HasColumnType("nvarchar(max)");

				b.Property<DateTime?>("StartDate")
					.HasColumnType("datetime2");

				b.Property<int>("StatusId")
					.HasColumnType("int");

				b.Property<string>("contractDuration")
					.HasColumnType("nvarchar(max)");

				b.Property<int>("traineeProfileId")
					.HasColumnType("int");

				b.HasKey("Id");

				b.HasIndex("ContractByIdId");

				b.HasIndex("CreatedById");

				b.HasIndex("DepartmentId");

				b.HasIndex("JobId");

				b.HasIndex("LastUpdatedById");

				b.HasIndex("StatusId");

				b.HasIndex("traineeProfileId");

				b.ToTable("TraineeContract");
			});

			modelBuilder.Entity("Core.Entity.TraineeContractDetails", b =>
			{
				b.Property<bool?>("AcceptContract")
					.HasColumnType("bit");

				b.Property<string>("ContractBy")
					.HasColumnType("nvarchar(max)");

				b.Property<string>("ContractDuration")
					.HasColumnType("nvarchar(max)");

				b.Property<string>("ContractStatus")
					.HasColumnType("nvarchar(max)");

				b.Property<string>("CreatedById")
					.HasColumnType("nvarchar(450)");

				b.Property<DateTime>("CreatedOn")
					.HasColumnType("datetime2");

				b.Property<string>("DepartmentName")
					.HasColumnType("nvarchar(max)");

				b.Property<string>("Details")
					.HasColumnType("nvarchar(max)");

				b.Property<DateTime?>("EndDate")
					.HasColumnType("datetime2");

				b.Property<int>("Id")
					.HasColumnType("int");

				b.Property<bool>("IsDeleted")
					.HasColumnType("bit");

				b.Property<string>("JobName")
					.HasColumnType("nvarchar(max)");

				b.Property<string>("LastUpdatedById")
					.HasColumnType("nvarchar(450)");

				b.Property<DateTime?>("LastUpdatedOn")
					.HasColumnType("datetime2");

				b.Property<string>("Name")
					.HasColumnType("nvarchar(max)");

				b.Property<string>("contractFor")
					.HasColumnType("nvarchar(max)");

				b.Property<DateTime?>("startDate")
					.HasColumnType("datetime2");

				b.HasIndex("CreatedById");

				b.HasIndex("LastUpdatedById");

				b.ToView(null);
			});

			modelBuilder.Entity("Core.Entity.TraineeContractRow", b =>
			{
				b.Property<string>("CV_filePath")
					.HasColumnType("nvarchar(max)");

				b.Property<string>("CreatedById")
					.HasColumnType("nvarchar(450)");

				b.Property<DateTime>("CreatedOn")
					.HasColumnType("datetime2");

				b.Property<string>("Email")
					.HasColumnType("nvarchar(max)");

				b.Property<int>("Id")
					.HasColumnType("int");

				b.Property<string>("IqamaNumber")
					.HasColumnType("nvarchar(max)");

				b.Property<bool>("IsDeleted")
					.HasColumnType("bit");

				b.Property<string>("JobStatus")
					.HasColumnType("nvarchar(max)");

				b.Property<int>("JobStatusId")
					.HasColumnType("int");

				b.Property<string>("LastUpdatedById")
					.HasColumnType("nvarchar(450)");

				b.Property<DateTime?>("LastUpdatedOn")
					.HasColumnType("datetime2");

				b.Property<string>("PhoneNo")
					.HasColumnType("nvarchar(max)");

				b.Property<string>("ProfilePic")
					.HasColumnType("nvarchar(max)");

				b.Property<string>("UserName")
					.HasColumnType("nvarchar(max)");

				b.Property<string>("fullName")
					.HasColumnType("nvarchar(max)");

				b.Property<int>("jobId")
					.HasColumnType("int");

				b.Property<string>("locationUrl")
					.HasColumnType("nvarchar(max)");

				b.Property<string>("userID")
					.HasColumnType("nvarchar(max)");

				b.HasIndex("CreatedById");

				b.HasIndex("LastUpdatedById");

				b.ToView(null);
			});

			modelBuilder.Entity("Core.Entity.TraineeDetails", b =>
			{
				b.Property<string>("Address")
					.HasColumnType("nvarchar(max)");

				b.Property<string>("ArabicName")
					.HasColumnType("nvarchar(max)");

				b.Property<DateTime>("BirthDate")
					.HasColumnType("datetime2");

				b.Property<string>("CV_CoverLetter")
					.HasColumnType("nvarchar(max)");

				b.Property<string>("CV_filePath")
					.HasColumnType("nvarchar(max)");

				b.Property<string>("City")
					.HasColumnType("nvarchar(max)");

				b.Property<string>("CreatedById")
					.HasColumnType("nvarchar(450)");

				b.Property<DateTime>("CreatedOn")
					.HasColumnType("datetime2");

				b.Property<string>("Donation_Hours_File_Path")
					.HasColumnType("nvarchar(max)");

				b.Property<bool>("Donation_Hours_Status")
					.HasColumnType("bit");

				b.Property<string>("Education")
					.IsRequired()
					.HasColumnType("nvarchar(max)");

				b.Property<string>("Email")
					.HasColumnType("nvarchar(max)");

				b.Property<string>("EnglishName")
					.HasColumnType("nvarchar(max)");

				b.Property<string>("FullName")
					.HasColumnType("nvarchar(max)");

				b.Property<bool>("Gender")
					.HasColumnType("bit");

				b.Property<DateTime?>("GraduationDate")
					.HasColumnType("datetime2");

				b.Property<string>("GraduationFilePath")
					.HasColumnType("nvarchar(max)");

				b.Property<int>("Id")
					.HasColumnType("int");

				b.Property<string>("IqamaNumber")
					.HasColumnType("nvarchar(max)");

				b.Property<DateTime?>("Iqama_Expiry_Date")
					.HasColumnType("datetime2");

				b.Property<bool>("IsDeleted")
					.HasColumnType("bit");

				b.Property<string>("LastUpdatedById")
					.HasColumnType("nvarchar(450)");

				b.Property<DateTime?>("LastUpdatedOn")
					.HasColumnType("datetime2");

				b.Property<string>("License_File")
					.HasColumnType("nvarchar(max)");

				b.Property<string>("MaritalStatus")
					.HasColumnType("nvarchar(max)");

				b.Property<string>("PhoneNo")
					.HasColumnType("nvarchar(max)");

				b.Property<string>("ProfilePic")
					.HasColumnType("nvarchar(max)");

				b.Property<int>("Social_Duration")
					.HasColumnType("int");

				b.Property<bool>("Social_Status_Id")
					.HasColumnType("bit");

				b.Property<int>("TamheirStatusId")
					.HasColumnType("int");

				b.Property<int>("Tamheir_Duration")
					.HasColumnType("int");

				b.Property<bool>("Tamheir_Status_Id")
					.HasColumnType("bit");

				b.Property<string>("Training_File_Path")
					.HasColumnType("nvarchar(max)");

				b.Property<string>("UserId")
					.HasColumnType("nvarchar(max)");

				b.Property<string>("UserName")
					.HasColumnType("nvarchar(max)");

				b.Property<bool>("license_State")
					.HasColumnType("bit");

				b.HasIndex("CreatedById");

				b.HasIndex("LastUpdatedById");

				b.ToView(null);
			});

			modelBuilder.Entity("Core.Entity.TraineeDTO", b =>
			{
				b.Property<int>("TraineeJobId")
					.HasColumnType("int");

				b.Property<string>("TraineeName")
					.IsRequired()
					.HasColumnType("nvarchar(max)");

				b.ToView(null);
			});

			modelBuilder.Entity("Core.Entity.TraineeJob", b =>
			{
				b.Property<int>("Id")
					.ValueGeneratedOnAdd()
					.HasColumnType("int");

				SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

				b.Property<string>("CreatedById")
					.HasColumnType("nvarchar(450)");

				b.Property<DateTime>("CreatedOn")
					.HasColumnType("datetime2");

				b.Property<bool>("IsDeleted")
					.HasColumnType("bit");

				b.Property<int>("JobId")
					.HasColumnType("int");

				b.Property<string>("LastUpdatedById")
					.HasColumnType("nvarchar(450)");

				b.Property<DateTime?>("LastUpdatedOn")
					.HasColumnType("datetime2");

				b.Property<string>("Notes")
					.HasColumnType("nvarchar(max)");

				b.Property<int>("StateId")
					.HasColumnType("int");

				b.Property<int>("traineeProfileId")
					.HasColumnType("int");

				b.HasKey("Id");

				b.HasIndex("CreatedById");

				b.HasIndex("JobId");

				b.HasIndex("LastUpdatedById");

				b.HasIndex("StateId");

				b.HasIndex("traineeProfileId");

				b.ToTable("traineeJobs");
			});

			modelBuilder.Entity("Core.Entity.TraineeJobStatus", b =>
			{
				b.Property<int>("Id")
					.ValueGeneratedOnAdd()
					.HasColumnType("int");

				SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

				b.Property<string>("CreatedById")
					.HasColumnType("nvarchar(450)");

				b.Property<DateTime>("CreatedOn")
					.ValueGeneratedOnAdd()
					.HasColumnType("datetime2")
					.HasDefaultValueSql("GETDATE()");

				b.Property<bool>("IsDeleted")
					.ValueGeneratedOnAdd()
					.HasColumnType("bit")
					.HasDefaultValue(false);

				b.Property<string>("LastUpdatedById")
					.HasColumnType("nvarchar(450)");

				b.Property<DateTime?>("LastUpdatedOn")
					.HasColumnType("datetime2");

				b.Property<string>("TStatusColor")
					.HasColumnType("nvarchar(max)");

				b.Property<string>("TStatusName")
					.IsRequired()
					.HasMaxLength(100)
					.HasColumnType("nvarchar(100)");

				b.HasKey("Id");

				b.HasIndex("CreatedById");

				b.HasIndex("LastUpdatedById");

				b.ToTable("TraineeJobStatus");
			});

			modelBuilder.Entity("Core.Entity.TraineeProfile", b =>
			{
				b.Property<int>("Id")
					.ValueGeneratedOnAdd()
					.HasColumnType("int");

				SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

				b.Property<string>("Address")
					.IsRequired()
					.HasMaxLength(500)
					.HasColumnType("nvarchar(500)");

				b.Property<string>("ArabicName")
					.IsRequired()
					.HasMaxLength(500)
					.HasColumnType("nvarchar(500)");

				b.Property<DateTime>("BirthDate")
					.HasColumnType("datetime2");

				b.Property<string>("CV_CoverLetter")
					.HasMaxLength(500)
					.HasColumnType("nvarchar(500)");

				b.Property<string>("CV_Summery")
					.HasMaxLength(500)
					.HasColumnType("nvarchar(500)");

				b.Property<string>("CV_filePath")
					.IsRequired()
					.HasMaxLength(500)
					.HasColumnType("nvarchar(500)");

				b.Property<int>("CityId")
					.HasColumnType("int");

				b.Property<string>("CreatedById")
					.HasColumnType("nvarchar(450)");

				b.Property<DateTime>("CreatedOn")
					.ValueGeneratedOnAdd()
					.HasColumnType("datetime2")
					.HasDefaultValueSql("GETDATE()");

				b.Property<string>("Donation_Hours_File_Path")
					.HasMaxLength(500)
					.HasColumnType("nvarchar(500)");

				b.Property<bool>("Donation_Hours_Status")
					.HasColumnType("bit");

				b.Property<int>("EducationMajorityId")
					.HasColumnType("int");

				b.Property<string>("EnglishName")
					.IsRequired()
					.HasMaxLength(500)
					.HasColumnType("nvarchar(500)");

				b.Property<string>("Eqrar")
					.HasColumnType("nvarchar(max)");

				b.Property<int?>("ExpId")
					.HasColumnType("int");

				b.Property<bool>("Gender")
					.HasColumnType("bit");

				b.Property<DateTime?>("GraduationDate")
					.HasColumnType("datetime2");

				b.Property<string>("GraduationFilePath")
					.HasMaxLength(500)
					.HasColumnType("nvarchar(500)");

				b.Property<string>("IqamaNumber")
					.IsRequired()
					.HasMaxLength(100)
					.HasColumnType("nvarchar(100)");

				b.Property<DateTime?>("Iqama_Expiry_Date")
					.HasColumnType("datetime2");

				b.Property<bool>("IsDeleted")
					.ValueGeneratedOnAdd()
					.HasColumnType("bit")
					.HasDefaultValue(false);

				b.Property<string>("LastUpdatedById")
					.HasColumnType("nvarchar(450)");

				b.Property<DateTime?>("LastUpdatedOn")
					.HasColumnType("datetime2");

				b.Property<string>("License_File")
					.HasMaxLength(500)
					.HasColumnType("nvarchar(500)");

				b.Property<int>("MaritalStatesId")
					.HasColumnType("int");

				b.Property<string>("PhoneNo")
					.IsRequired()
					.HasMaxLength(50)
					.HasColumnType("nvarchar(50)");

				b.Property<string>("ProfilePic")
					.IsRequired()
					.HasMaxLength(500)
					.HasColumnType("nvarchar(500)");

				b.Property<int>("Social_Duration")
					.HasColumnType("int");

				b.Property<bool>("Social_Status_Id")
					.HasColumnType("bit");

				b.Property<int>("TamheirStatusId")
					.HasColumnType("int");

				b.Property<int>("Tamheir_Duration")
					.HasColumnType("int");

				b.Property<bool>("Tamheir_Status_Id")
					.HasColumnType("bit");

				b.Property<int?>("Tamher_getting_duration")
					.HasColumnType("int");

				b.Property<int>("Trainee_Id")
					.HasColumnType("int");

				b.Property<string>("Training_File_Path")
					.HasColumnType("nvarchar(max)");

				b.Property<string>("UserId")
					.IsRequired()
					.HasColumnType("nvarchar(450)");

				b.Property<bool>("license_State")
					.HasColumnType("bit");

				b.Property<bool>("tamheir_getting_status")
					.HasColumnType("bit");

				b.HasKey("Id");

				b.HasIndex("CreatedById");

				b.HasIndex("ExpId");

				b.HasIndex("IqamaNumber")
					.IsUnique();

				b.HasIndex("LastUpdatedById");

				b.HasIndex("MaritalStatesId");

				b.HasIndex("TamheirStatusId");

				b.HasIndex("UserId");

				b.ToTable("TraineeProfiles");
			});

			modelBuilder.Entity("Core.Entity.TraineeRows", b =>
			{
				b.Property<string>("CV_filePath")
					.HasColumnType("nvarchar(max)");

				b.Property<string>("CreatedById")
					.HasColumnType("nvarchar(450)");

				b.Property<DateTime>("CreatedOn")
					.HasColumnType("datetime2");

				b.Property<string>("Email")
					.HasColumnType("nvarchar(max)");

				b.Property<int>("Id")
					.HasColumnType("int");

				b.Property<string>("IqamaNumber")
					.HasColumnType("nvarchar(max)");

				b.Property<bool>("IsDeleted")
					.HasColumnType("bit");

				b.Property<string>("JobStatus")
					.HasColumnType("nvarchar(max)");

				b.Property<string>("JobStatusColor")
					.HasColumnType("nvarchar(max)");

				b.Property<int>("JobStatusId")
					.HasColumnType("int");

				b.Property<string>("LastUpdatedById")
					.HasColumnType("nvarchar(450)");

				b.Property<DateTime?>("LastUpdatedOn")
					.HasColumnType("datetime2");

				b.Property<string>("PhoneNo")
					.HasColumnType("nvarchar(max)");

				b.Property<string>("ProfilePic")
					.HasColumnType("nvarchar(max)");

				b.Property<string>("UserName")
					.HasColumnType("nvarchar(max)");

				b.Property<string>("fullName")
					.HasColumnType("nvarchar(max)");

				b.Property<int>("jobId")
					.HasColumnType("int");

				b.Property<string>("userID")
					.HasColumnType("nvarchar(max)");

				b.HasIndex("CreatedById");

				b.HasIndex("LastUpdatedById");

				b.ToView(null);
			});

			modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
			{
				b.Property<string>("Id")
					.HasColumnType("nvarchar(450)");

				b.Property<string>("ConcurrencyStamp")
					.IsConcurrencyToken()
					.HasColumnType("nvarchar(max)");

				b.Property<string>("Name")
					.HasMaxLength(256)
					.HasColumnType("nvarchar(256)");

				b.Property<string>("NormalizedName")
					.HasMaxLength(256)
					.HasColumnType("nvarchar(256)");

				b.HasKey("Id");

				b.HasIndex("NormalizedName")
					.IsUnique()
					.HasDatabaseName("RoleNameIndex")
					.HasFilter("[NormalizedName] IS NOT NULL");

				b.ToTable("AspNetRoles", (string)null);
			});

			modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
			{
				b.Property<int>("Id")
					.ValueGeneratedOnAdd()
					.HasColumnType("int");

				SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

				b.Property<string>("ClaimType")
					.HasColumnType("nvarchar(max)");

				b.Property<string>("ClaimValue")
					.HasColumnType("nvarchar(max)");

				b.Property<string>("RoleId")
					.IsRequired()
					.HasColumnType("nvarchar(450)");

				b.HasKey("Id");

				b.HasIndex("RoleId");

				b.ToTable("AspNetRoleClaims", (string)null);
			});

			modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
			{
				b.Property<int>("Id")
					.ValueGeneratedOnAdd()
					.HasColumnType("int");

				SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

				b.Property<string>("ClaimType")
					.HasColumnType("nvarchar(max)");

				b.Property<string>("ClaimValue")
					.HasColumnType("nvarchar(max)");

				b.Property<string>("UserId")
					.IsRequired()
					.HasColumnType("nvarchar(450)");

				b.HasKey("Id");

				b.HasIndex("UserId");

				b.ToTable("AspNetUserClaims", (string)null);
			});

			modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
			{
				b.Property<string>("LoginProvider")
					.HasColumnType("nvarchar(450)");

				b.Property<string>("ProviderKey")
					.HasColumnType("nvarchar(450)");

				b.Property<string>("ProviderDisplayName")
					.HasColumnType("nvarchar(max)");

				b.Property<string>("UserId")
					.IsRequired()
					.HasColumnType("nvarchar(450)");

				b.HasKey("LoginProvider", "ProviderKey");

				b.HasIndex("UserId");

				b.ToTable("AspNetUserLogins", (string)null);
			});

			modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
			{
				b.Property<string>("UserId")
					.HasColumnType("nvarchar(450)");

				b.Property<string>("RoleId")
					.HasColumnType("nvarchar(450)");

				b.HasKey("UserId", "RoleId");

				b.HasIndex("RoleId");

				b.ToTable("AspNetUserRoles", (string)null);
			});

			modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
			{
				b.Property<string>("UserId")
					.HasColumnType("nvarchar(450)");

				b.Property<string>("LoginProvider")
					.HasColumnType("nvarchar(450)");

				b.Property<string>("Name")
					.HasColumnType("nvarchar(450)");

				b.Property<string>("Value")
					.HasColumnType("nvarchar(max)");

				b.HasKey("UserId", "LoginProvider", "Name");

				b.ToTable("AspNetUserTokens", (string)null);
			});

			modelBuilder.Entity("Core.Entity.Attendance", b =>
			{
				b.HasOne("Core.Entity.AttendanceType", "AttendanceType")
					.WithMany()
					.HasForeignKey("AttendanceTypeId")
					.OnDelete(DeleteBehavior.Cascade)
					.IsRequired();

				b.HasOne("Core.Entity.ApplicationUser", "CreatedBy")
					.WithMany()
					.HasForeignKey("CreatedById");

				b.HasOne("Core.Entity.ApplicationUser", "LastUpdatedBy")
					.WithMany()
					.HasForeignKey("LastUpdatedById");

				b.Navigation("AttendanceType");

				b.Navigation("CreatedBy");

				b.Navigation("LastUpdatedBy");
			});

			modelBuilder.Entity("Core.Entity.AttendanceType", b =>
			{
				b.HasOne("Core.Entity.ApplicationUser", "CreatedBy")
					.WithMany()
					.HasForeignKey("CreatedById");

				b.HasOne("Core.Entity.ApplicationUser", "LastUpdatedBy")
					.WithMany()
					.HasForeignKey("LastUpdatedById");

				b.Navigation("CreatedBy");

				b.Navigation("LastUpdatedBy");
			});

			modelBuilder.Entity("Core.Entity.City", b =>
			{
				b.HasOne("Core.Entity.ApplicationUser", "CreatedBy")
					.WithMany()
					.HasForeignKey("CreatedById");

				b.HasOne("Core.Entity.ApplicationUser", "LastUpdatedBy")
					.WithMany()
					.HasForeignKey("LastUpdatedById");

				b.Navigation("CreatedBy");

				b.Navigation("LastUpdatedBy");
			});

			modelBuilder.Entity("Core.Entity.Coordinators", b =>
			{
				b.HasOne("Core.Entity.ApplicationUser", "CreatedBy")
					.WithMany()
					.HasForeignKey("CreatedById");

				b.HasOne("Core.Entity.Department", "Department")
					.WithMany()
					.HasForeignKey("DepartmentId")
					.OnDelete(DeleteBehavior.NoAction)
					.IsRequired();

				b.HasOne("Core.Entity.ApplicationUser", "LastUpdatedBy")
					.WithMany()
					.HasForeignKey("LastUpdatedById");

				b.HasOne("Core.Entity.ApplicationUser", "User")
					.WithMany()
					.HasForeignKey("UserId")
					.OnDelete(DeleteBehavior.Cascade)
					.IsRequired();

				b.Navigation("CreatedBy");

				b.Navigation("Department");

				b.Navigation("LastUpdatedBy");

				b.Navigation("User");
			});

			modelBuilder.Entity("Core.Entity.Department", b =>
			{
				b.HasOne("Core.Entity.ApplicationUser", "Coordinator")
					.WithMany()
					.HasForeignKey("CoordinatorId")
					.OnDelete(DeleteBehavior.Cascade)
					.IsRequired();

				b.HasOne("Core.Entity.ApplicationUser", "CreatedBy")
					.WithMany()
					.HasForeignKey("CreatedById");

				b.HasOne("Core.Entity.ApplicationUser", "LastUpdatedBy")
					.WithMany()
					.HasForeignKey("LastUpdatedById");

				b.Navigation("Coordinator");

				b.Navigation("CreatedBy");

				b.Navigation("LastUpdatedBy");
			});

			modelBuilder.Entity("Core.Entity.DepartmentDetails", b =>
			{
				b.HasOne("Core.Entity.ApplicationUser", "CreatedBy")
					.WithMany()
					.HasForeignKey("CreatedById");

				b.HasOne("Core.Entity.ApplicationUser", "LastUpdatedBy")
					.WithMany()
					.HasForeignKey("LastUpdatedById");

				b.Navigation("CreatedBy");

				b.Navigation("LastUpdatedBy");
			});

			modelBuilder.Entity("Core.Entity.DepartmentRows", b =>
			{
				b.HasOne("Core.Entity.ApplicationUser", "CreatedBy")
					.WithMany()
					.HasForeignKey("CreatedById");

				b.HasOne("Core.Entity.ApplicationUser", "LastUpdatedBy")
					.WithMany()
					.HasForeignKey("LastUpdatedById");

				b.Navigation("CreatedBy");

				b.Navigation("LastUpdatedBy");
			});

			modelBuilder.Entity("Core.Entity.Education", b =>
			{
				b.HasOne("Core.Entity.ApplicationUser", "CreatedBy")
					.WithMany()
					.HasForeignKey("CreatedById");

				b.HasOne("Core.Entity.ApplicationUser", "LastUpdatedBy")
					.WithMany()
					.HasForeignKey("LastUpdatedById");

				b.Navigation("CreatedBy");

				b.Navigation("LastUpdatedBy");
			});

			modelBuilder.Entity("Core.Entity.Experience", b =>
			{
				b.HasOne("Core.Entity.ApplicationUser", "CreatedBy")
					.WithMany()
					.HasForeignKey("CreatedById");

				b.HasOne("Core.Entity.ApplicationUser", "LastUpdatedBy")
					.WithMany()
					.HasForeignKey("LastUpdatedById");

				b.Navigation("CreatedBy");

				b.Navigation("LastUpdatedBy");
			});

			modelBuilder.Entity("Core.Entity.Interview", b =>
			{
				b.HasOne("Core.Entity.ApplicationUser", "CreatedBy")
					.WithMany()
					.HasForeignKey("CreatedById");

				b.HasOne("Core.Entity.InterviewStatus", "InterviewStatus")
					.WithMany()
					.HasForeignKey("InterviewStatusId");

				b.HasOne("Core.Entity.ApplicationUser", "Interviewer")
					.WithMany()
					.HasForeignKey("InterviewerId");

				b.HasOne("Core.Entity.Job", "Job")
					.WithMany()
					.HasForeignKey("JobId")
					.OnDelete(DeleteBehavior.Cascade)
					.IsRequired();

				b.HasOne("Core.Entity.ApplicationUser", "LastUpdatedBy")
					.WithMany()
					.HasForeignKey("LastUpdatedById");

				b.HasOne("Core.Entity.TraineeProfile", "TraineeProfile")
					.WithMany()
					.HasForeignKey("TraineeProfileId")
					.OnDelete(DeleteBehavior.Cascade)
					.IsRequired();

				b.Navigation("CreatedBy");

				b.Navigation("InterviewStatus");

				b.Navigation("Interviewer");

				b.Navigation("Job");

				b.Navigation("LastUpdatedBy");

				b.Navigation("TraineeProfile");
			});

			modelBuilder.Entity("Core.Entity.InterviewDetails", b =>
			{
				b.HasOne("Core.Entity.ApplicationUser", "CreatedBy")
					.WithMany()
					.HasForeignKey("CreatedById");

				b.HasOne("Core.Entity.ApplicationUser", "LastUpdatedBy")
					.WithMany()
					.HasForeignKey("LastUpdatedById");

				b.Navigation("CreatedBy");

				b.Navigation("LastUpdatedBy");
			});

			modelBuilder.Entity("Core.Entity.InterviewRows", b =>
			{
				b.HasOne("Core.Entity.ApplicationUser", "CreatedBy")
					.WithMany()
					.HasForeignKey("CreatedById");

				b.HasOne("Core.Entity.ApplicationUser", "LastUpdatedBy")
					.WithMany()
					.HasForeignKey("LastUpdatedById");

				b.Navigation("CreatedBy");

				b.Navigation("LastUpdatedBy");
			});

			modelBuilder.Entity("Core.Entity.InterviewStatus", b =>
			{
				b.HasOne("Core.Entity.ApplicationUser", "CreatedBy")
					.WithMany()
					.HasForeignKey("CreatedById");

				b.HasOne("Core.Entity.ApplicationUser", "LastUpdatedBy")
					.WithMany()
					.HasForeignKey("LastUpdatedById");

				b.Navigation("CreatedBy");

				b.Navigation("LastUpdatedBy");
			});

			modelBuilder.Entity("Core.Entity.Job", b =>
			{
				b.HasOne("Core.Entity.ApplicationUser", "CreatedBy")
					.WithMany()
					.HasForeignKey("CreatedById");

				b.HasOne("Core.Entity.Department", "Department")
					.WithMany()
					.HasForeignKey("DepId");

				b.HasOne("Core.Entity.Education", "EducationMajority")
					.WithMany()
					.HasForeignKey("EducId");

				b.HasOne("Core.Entity.Experience", "Experience")
					.WithMany()
					.HasForeignKey("ExpId");

				b.HasOne("Core.Entity.JobsStatus", "JobStatus")
					.WithMany()
					.HasForeignKey("JobStatusId");

				b.HasOne("Core.Entity.ApplicationUser", "LastUpdatedBy")
					.WithMany()
					.HasForeignKey("LastUpdatedById");

				b.Navigation("CreatedBy");

				b.Navigation("Department");

				b.Navigation("EducationMajority");

				b.Navigation("Experience");

				b.Navigation("JobStatus");

				b.Navigation("LastUpdatedBy");
			});

			modelBuilder.Entity("Core.Entity.JobDetails", b =>
			{
				b.HasOne("Core.Entity.ApplicationUser", "CreatedBy")
					.WithMany()
					.HasForeignKey("CreatedById");

				b.HasOne("Core.Entity.ApplicationUser", "LastUpdatedBy")
					.WithMany()
					.HasForeignKey("LastUpdatedById");

				b.Navigation("CreatedBy");

				b.Navigation("LastUpdatedBy");
			});

			modelBuilder.Entity("Core.Entity.JobDTO", b =>
			{
				b.HasOne("Core.Entity.ApplicationUser", "CreatedBy")
					.WithMany()
					.HasForeignKey("CreatedById");

				b.HasOne("Core.Entity.Department", "Department")
					.WithMany()
					.HasForeignKey("DepId");

				b.HasOne("Core.Entity.ApplicationUser", "LastUpdatedBy")
					.WithMany()
					.HasForeignKey("LastUpdatedById");

				b.Navigation("CreatedBy");

				b.Navigation("Department");

				b.Navigation("LastUpdatedBy");
			});

			modelBuilder.Entity("Core.Entity.JobRows", b =>
			{
				b.HasOne("Core.Entity.ApplicationUser", "CreatedBy")
					.WithMany()
					.HasForeignKey("CreatedById");

				b.HasOne("Core.Entity.ApplicationUser", "LastUpdatedBy")
					.WithMany()
					.HasForeignKey("LastUpdatedById");

				b.Navigation("CreatedBy");

				b.Navigation("LastUpdatedBy");
			});

			modelBuilder.Entity("Core.Entity.JobsStatus", b =>
			{
				b.HasOne("Core.Entity.ApplicationUser", "CreatedBy")
					.WithMany()
					.HasForeignKey("CreatedById");

				b.HasOne("Core.Entity.ApplicationUser", "LastUpdatedBy")
					.WithMany()
					.HasForeignKey("LastUpdatedById");

				b.Navigation("CreatedBy");

				b.Navigation("LastUpdatedBy");
			});

			modelBuilder.Entity("Core.Entity.MaritalState", b =>
			{
				b.HasOne("Core.Entity.ApplicationUser", "CreatedBy")
					.WithMany()
					.HasForeignKey("CreatedById");

				b.HasOne("Core.Entity.ApplicationUser", "LastUpdatedBy")
					.WithMany()
					.HasForeignKey("LastUpdatedById");

				b.Navigation("CreatedBy");

				b.Navigation("LastUpdatedBy");
			});

			modelBuilder.Entity("Core.Entity.Nationality", b =>
			{
				b.HasOne("Core.Entity.ApplicationUser", "CreatedBy")
					.WithMany()
					.HasForeignKey("CreatedById");

				b.HasOne("Core.Entity.ApplicationUser", "LastUpdatedBy")
					.WithMany()
					.HasForeignKey("LastUpdatedById");

				b.Navigation("CreatedBy");

				b.Navigation("LastUpdatedBy");
			});

			modelBuilder.Entity("Core.Entity.SocialStatus", b =>
			{
				b.HasOne("Core.Entity.ApplicationUser", "CreatedBy")
					.WithMany()
					.HasForeignKey("CreatedById");

				b.HasOne("Core.Entity.ApplicationUser", "LastUpdatedBy")
					.WithMany()
					.HasForeignKey("LastUpdatedById");

				b.Navigation("CreatedBy");

				b.Navigation("LastUpdatedBy");
			});

			modelBuilder.Entity("Core.Entity.Supervisor", b =>
			{
				b.HasOne("Core.Entity.ApplicationUser", "CreatedBy")
					.WithMany()
					.HasForeignKey("CreatedById");

				b.HasOne("Core.Entity.Department", "Department")
					.WithMany()
					.HasForeignKey("DepartmentId")
					.OnDelete(DeleteBehavior.NoAction)
					.IsRequired();

				b.HasOne("Core.Entity.ApplicationUser", "LastUpdatedBy")
					.WithMany()
					.HasForeignKey("LastUpdatedById");

				b.HasOne("Core.Entity.ApplicationUser", "User")
					.WithMany()
					.HasForeignKey("UserId")
					.OnDelete(DeleteBehavior.Cascade)
					.IsRequired();

				b.Navigation("CreatedBy");

				b.Navigation("Department");

				b.Navigation("LastUpdatedBy");

				b.Navigation("User");
			});

			modelBuilder.Entity("Core.Entity.SupervisorDetails", b =>
			{
				b.HasOne("Core.Entity.Department", "Department")
					.WithMany()
					.HasForeignKey("DepartmentId");

				b.Navigation("Department");
			});

			modelBuilder.Entity("Core.Entity.TamheirStatus", b =>
			{
				b.HasOne("Core.Entity.ApplicationUser", "CreatedBy")
					.WithMany()
					.HasForeignKey("CreatedById");

				b.HasOne("Core.Entity.ApplicationUser", "LastUpdatedBy")
					.WithMany()
					.HasForeignKey("LastUpdatedById");

				b.Navigation("CreatedBy");

				b.Navigation("LastUpdatedBy");
			});

			modelBuilder.Entity("Core.Entity.Ticket", b =>
			{
				b.HasOne("Core.Entity.ApplicationUser", "CreatedBy")
					.WithMany()
					.HasForeignKey("CreatedById");

				b.HasOne("Core.Entity.ApplicationUser", "CreatedFor")
					.WithMany()
					.HasForeignKey("CreatedForId");

				b.HasOne("Core.Entity.ApplicationUser", "LastUpdatedBy")
					.WithMany()
					.HasForeignKey("LastUpdatedById");

				b.HasOne("Core.Entity.TicketStatus", "Status")
					.WithMany("Tickets")
					.HasForeignKey("StatusId")
					.OnDelete(DeleteBehavior.Cascade)
					.IsRequired();

				b.HasOne("Core.Entity.TicketCategory", "TicketCategory")
					.WithMany()
					.HasForeignKey("TicketCategoryId")
					.OnDelete(DeleteBehavior.Cascade)
					.IsRequired();

				b.Navigation("CreatedBy");

				b.Navigation("CreatedFor");

				b.Navigation("LastUpdatedBy");

				b.Navigation("Status");

				b.Navigation("TicketCategory");
			});

			modelBuilder.Entity("Core.Entity.TicketAttachment", b =>
			{
				b.HasOne("Core.Entity.ApplicationUser", "CreatedBy")
					.WithMany()
					.HasForeignKey("CreatedById");

				b.HasOne("Core.Entity.ApplicationUser", "LastUpdatedBy")
					.WithMany()
					.HasForeignKey("LastUpdatedById");

				b.HasOne("Core.Entity.Ticket", "Ticket")
					.WithMany()
					.HasForeignKey("TicketId");

				b.Navigation("CreatedBy");

				b.Navigation("LastUpdatedBy");

				b.Navigation("Ticket");
			});

			modelBuilder.Entity("Core.Entity.TicketCategory", b =>
			{
				b.HasOne("Core.Entity.ApplicationUser", "CreatedBy")
					.WithMany()
					.HasForeignKey("CreatedById");

				b.HasOne("Core.Entity.ApplicationUser", "LastUpdatedBy")
					.WithMany()
					.HasForeignKey("LastUpdatedById");

				b.Navigation("CreatedBy");

				b.Navigation("LastUpdatedBy");
			});

			modelBuilder.Entity("Core.Entity.TicketDetails", b =>
			{
				b.HasOne("Core.Entity.ApplicationUser", "CreatedBy")
					.WithMany()
					.HasForeignKey("CreatedById");

				b.HasOne("Core.Entity.ApplicationUser", "LastUpdatedBy")
					.WithMany()
					.HasForeignKey("LastUpdatedById");

				b.Navigation("CreatedBy");

				b.Navigation("LastUpdatedBy");
			});

			modelBuilder.Entity("Core.Entity.TicketResponse", b =>
			{
				b.HasOne("Core.Entity.ApplicationUser", "CreatedBy")
					.WithMany()
					.HasForeignKey("CreatedById");

				b.HasOne("Core.Entity.ApplicationUser", "LastUpdatedBy")
					.WithMany()
					.HasForeignKey("LastUpdatedById");

				b.HasOne("Core.Entity.Ticket", "Ticket")
					.WithMany()
					.HasForeignKey("TicketId")
					.OnDelete(DeleteBehavior.Cascade)
					.IsRequired();

				b.Navigation("CreatedBy");

				b.Navigation("LastUpdatedBy");

				b.Navigation("Ticket");
			});

			modelBuilder.Entity("Core.Entity.TicketRows", b =>
			{
				b.HasOne("Core.Entity.ApplicationUser", "CreatedBy")
					.WithMany()
					.HasForeignKey("CreatedById");

				b.HasOne("Core.Entity.ApplicationUser", "LastUpdatedBy")
					.WithMany()
					.HasForeignKey("LastUpdatedById");

				b.Navigation("CreatedBy");

				b.Navigation("LastUpdatedBy");
			});

			modelBuilder.Entity("Core.Entity.TraineeContract", b =>
			{
				b.HasOne("Core.Entity.ApplicationUser", "ContractById")
					.WithMany()
					.HasForeignKey("ContractByIdId");

				b.HasOne("Core.Entity.ApplicationUser", "CreatedBy")
					.WithMany()
					.HasForeignKey("CreatedById");

				b.HasOne("Core.Entity.Department", "Department")
					.WithMany()
					.HasForeignKey("DepartmentId")
					.OnDelete(DeleteBehavior.Cascade)
					.IsRequired();

				b.HasOne("Core.Entity.Job", "Job")
					.WithMany()
					.HasForeignKey("JobId")
					.OnDelete(DeleteBehavior.Cascade)
					.IsRequired();

				b.HasOne("Core.Entity.ApplicationUser", "LastUpdatedBy")
					.WithMany()
					.HasForeignKey("LastUpdatedById");

				b.HasOne("Core.Entity.TraineeJobStatus", "Status")
					.WithMany()
					.HasForeignKey("StatusId")
					.OnDelete(DeleteBehavior.Cascade)
					.IsRequired();

				b.HasOne("Core.Entity.TraineeProfile", "traineeProfile")
					.WithMany()
					.HasForeignKey("traineeProfileId")
					.OnDelete(DeleteBehavior.NoAction)
					.IsRequired();

				b.Navigation("ContractById");

				b.Navigation("CreatedBy");

				b.Navigation("Department");

				b.Navigation("Job");

				b.Navigation("LastUpdatedBy");

				b.Navigation("Status");

				b.Navigation("traineeProfile");
			});

			modelBuilder.Entity("Core.Entity.TraineeContractDetails", b =>
			{
				b.HasOne("Core.Entity.ApplicationUser", "CreatedBy")
					.WithMany()
					.HasForeignKey("CreatedById");

				b.HasOne("Core.Entity.ApplicationUser", "LastUpdatedBy")
					.WithMany()
					.HasForeignKey("LastUpdatedById");

				b.Navigation("CreatedBy");

				b.Navigation("LastUpdatedBy");
			});

			modelBuilder.Entity("Core.Entity.TraineeContractRow", b =>
			{
				b.HasOne("Core.Entity.ApplicationUser", "CreatedBy")
					.WithMany()
					.HasForeignKey("CreatedById");

				b.HasOne("Core.Entity.ApplicationUser", "LastUpdatedBy")
					.WithMany()
					.HasForeignKey("LastUpdatedById");

				b.Navigation("CreatedBy");

				b.Navigation("LastUpdatedBy");
			});

			modelBuilder.Entity("Core.Entity.TraineeDetails", b =>
			{
				b.HasOne("Core.Entity.ApplicationUser", "CreatedBy")
					.WithMany()
					.HasForeignKey("CreatedById");

				b.HasOne("Core.Entity.ApplicationUser", "LastUpdatedBy")
					.WithMany()
					.HasForeignKey("LastUpdatedById");

				b.Navigation("CreatedBy");

				b.Navigation("LastUpdatedBy");
			});

			modelBuilder.Entity("Core.Entity.TraineeJob", b =>
			{
				b.HasOne("Core.Entity.ApplicationUser", "CreatedBy")
					.WithMany()
					.HasForeignKey("CreatedById");

				b.HasOne("Core.Entity.Job", "Job")
					.WithMany("TraineeJob")
					.HasForeignKey("JobId")
					.OnDelete(DeleteBehavior.Cascade)
					.IsRequired();

				b.HasOne("Core.Entity.ApplicationUser", "LastUpdatedBy")
					.WithMany()
					.HasForeignKey("LastUpdatedById");

				b.HasOne("Core.Entity.TraineeJobStatus", "State")
					.WithMany()
					.HasForeignKey("StateId")
					.OnDelete(DeleteBehavior.Cascade)
					.IsRequired();

				b.HasOne("Core.Entity.TraineeProfile", "TraineeProfiles")
					.WithMany("TraineeJob")
					.HasForeignKey("traineeProfileId")
					.OnDelete(DeleteBehavior.Cascade)
					.IsRequired();

				b.Navigation("CreatedBy");

				b.Navigation("Job");

				b.Navigation("LastUpdatedBy");

				b.Navigation("State");

				b.Navigation("TraineeProfiles");
			});

			modelBuilder.Entity("Core.Entity.TraineeJobStatus", b =>
			{
				b.HasOne("Core.Entity.ApplicationUser", "CreatedBy")
					.WithMany()
					.HasForeignKey("CreatedById");

				b.HasOne("Core.Entity.ApplicationUser", "LastUpdatedBy")
					.WithMany()
					.HasForeignKey("LastUpdatedById");

				b.Navigation("CreatedBy");

				b.Navigation("LastUpdatedBy");
			});

			modelBuilder.Entity("Core.Entity.TraineeProfile", b =>
			{
				b.HasOne("Core.Entity.ApplicationUser", "CreatedBy")
					.WithMany()
					.HasForeignKey("CreatedById");

				b.HasOne("Core.Entity.Experience", "Experience")
					.WithMany()
					.HasForeignKey("ExpId");

				b.HasOne("Core.Entity.ApplicationUser", "LastUpdatedBy")
					.WithMany()
					.HasForeignKey("LastUpdatedById");

				b.HasOne("Core.Entity.MaritalState", "MaritalState")
					.WithMany()
					.HasForeignKey("MaritalStatesId")
					.OnDelete(DeleteBehavior.Cascade)
					.IsRequired();

				b.HasOne("Core.Entity.TamheirStatus", "TamheirStatus")
					.WithMany()
					.HasForeignKey("TamheirStatusId")
					.OnDelete(DeleteBehavior.Cascade)
					.IsRequired();

				b.HasOne("Core.Entity.ApplicationUser", "User")
					.WithMany()
					.HasForeignKey("UserId")
					.OnDelete(DeleteBehavior.Cascade)
					.IsRequired();

				b.Navigation("CreatedBy");

				b.Navigation("Experience");

				b.Navigation("LastUpdatedBy");

				b.Navigation("MaritalState");

				b.Navigation("TamheirStatus");

				b.Navigation("User");
			});

			modelBuilder.Entity("Core.Entity.TraineeRows", b =>
			{
				b.HasOne("Core.Entity.ApplicationUser", "CreatedBy")
					.WithMany()
					.HasForeignKey("CreatedById");

				b.HasOne("Core.Entity.ApplicationUser", "LastUpdatedBy")
					.WithMany()
					.HasForeignKey("LastUpdatedById");

				b.Navigation("CreatedBy");

				b.Navigation("LastUpdatedBy");
			});

			modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
			{
				b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
					.WithMany()
					.HasForeignKey("RoleId")
					.OnDelete(DeleteBehavior.Cascade)
					.IsRequired();
			});

			modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
			{
				b.HasOne("Core.Entity.ApplicationUser", null)
					.WithMany()
					.HasForeignKey("UserId")
					.OnDelete(DeleteBehavior.Cascade)
					.IsRequired();
			});

			modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
			{
				b.HasOne("Core.Entity.ApplicationUser", null)
					.WithMany()
					.HasForeignKey("UserId")
					.OnDelete(DeleteBehavior.Cascade)
					.IsRequired();
			});

			modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
			{
				b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
					.WithMany()
					.HasForeignKey("RoleId")
					.OnDelete(DeleteBehavior.Cascade)
					.IsRequired();

				b.HasOne("Core.Entity.ApplicationUser", null)
					.WithMany()
					.HasForeignKey("UserId")
					.OnDelete(DeleteBehavior.Cascade)
					.IsRequired();
			});

			modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
			{
				b.HasOne("Core.Entity.ApplicationUser", null)
					.WithMany()
					.HasForeignKey("UserId")
					.OnDelete(DeleteBehavior.Cascade)
					.IsRequired();
			});

			modelBuilder.Entity("Core.Entity.Job", b =>
			{
				b.Navigation("TraineeJob");
			});

			modelBuilder.Entity("Core.Entity.TicketStatus", b =>
			{
				b.Navigation("Tickets");
			});

			modelBuilder.Entity("Core.Entity.TraineeProfile", b =>
			{
				b.Navigation("TraineeJob");
			});
#pragma warning restore 612, 618
		}
	}
}